// ====== CONFIG ======
const API_BASE = location.origin + "/api";

// ====== DOM helpers ======
function h(tag, attrs = {}, children = []) {
  const el = document.createElement(tag);
  for (const [k, v] of Object.entries(attrs)) {
    if (k === "class") el.className = v;
    else if (k === "style" && typeof v === "object") Object.assign(el.style, v);
    else el.setAttribute(k, v);
  }
  if (!Array.isArray(children)) children = [children];
  for (const c of children) el.append(c instanceof Node ? c : document.createTextNode(c));
  return el;
}
function clear(el) { while (el.firstChild) el.removeChild(el.firstChild); }

// ====== Auth helpers ======
function getToken() { return localStorage.getItem("token"); }
function setToken(t) { t ? localStorage.setItem("token", t) : localStorage.removeItem("token"); }
// ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ feature ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏Å‡∏±‡∏ô‡πÑ‡∏õ‡∏ä‡∏ô‡∏´‡∏ô‡πâ‡∏≤ login)
function requireAuth(){ if (!getToken()) window.location.href = "./login.html"; }

// ====== API helper ======
async function api(path, { method = "GET", body, auth = false } = {}) {
  const headers = { "Content-Type": "application/json" };
  if (auth && getToken()) headers.Authorization = "Bearer " + getToken();
  const res = await fetch(`${API_BASE}${path}`, {
    method, headers, body: body ? JSON.stringify(body) : undefined,
  });
  const data = await res.json().catch(() => ({}));
  if (!res.ok) throw new Error(data.error || res.statusText);
  return data;
}

// ====== State (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö login/register) ======
let view = "login";                 // 'login' | 'register'
let lastRegisteredEmail = "";       // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
let showSuccessOnLogin = false;     // ‡πÅ‡∏™‡∏î‡∏á "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" ‡∏ó‡∏µ‡∏´‡∏ô‡πâ‡∏≤ login ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á
function goto(v){ view = v; render(); }

// ====== Password field with eye toggle (‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ã‡πâ‡∏≥) ======
function makePwField(placeholderText){
  const input = h("input", { class:"input", type:"password", placeholder: placeholderText });
  const btn = h("button", {
    type:"button",
    class:"pw-toggle",
    style:{
      position:"absolute", right:"12px", top:"50%",
      transform:"translateY(-50%)", border:"none",
      background:"transparent", cursor:"pointer", fontSize:"14px"
    },
    "aria-label":"‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
  }, "üëÅ");

  btn.onclick = () => {
    const show = input.type === "password";
    input.type = show ? "text" : "password";
    btn.textContent = show ? "üôà" : "üëÅ";
  };

  const wrap = h("div", { class:"input-wrap", style:{ position:"relative" }}, [input, btn]);
  return { wrap, input };
}

// ====== Screens: Login / Register ======
function render(){
  const root = document.body;
  clear(root);

  if (!getToken()){
    if (view === "register") renderRegister(root);
    else renderLogin(root);
  } else {
    // ‡∏°‡∏µ token ‡πÅ‡∏•‡πâ‡∏ß ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏Å‡πá‡∏™‡πà‡∏á‡πÑ‡∏õ home ‡πÅ‡∏ó‡∏ô (‡∏Å‡∏±‡∏ô‡πÄ‡∏ú‡∏∑‡πà‡∏≠)
    window.location.href = "./home.html";
  }
}

function renderLogin(root){
  const msg = h("div", { id: "msg" });

  const email = h("input", { class: "input", id: "email", type: "email", placeholder: "Email" });
  const pass  = h("input", { class: "input", id: "password", type: "password", placeholder: "Password" });

  if (lastRegisteredEmail) email.value = lastRegisteredEmail;

  const btnLogin = h("button", { class: "btn btn-primary" }, "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
  btnLogin.onclick = async () => {
    await doLogin({ email: email.value.trim(), password: pass.value }, msg, btnLogin);
  };

  const showPwBox = h("label", { class: "checkbox" }, [
    h("input", { type: "checkbox", id: "toggle-pw" }),
    "‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô",
  ]);
  showPwBox.querySelector("input").addEventListener("change", (e)=> {
    pass.type = e.target.checked ? "text" : "password";
  });

  const forgot = h("a", { href:"#", class:"link" }, "‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô");

  const card = h("div", { class:"login-card" }, [
    h("div", { class:"brand" }, [
      h("img", { src:"./images/logo.png", alt:"Elder Care", onerror:"this.style.display='none'" }),
    ]),
    h("h1", { class:"title" }, "Elderly Care"),
    h("p", { class:"subtitle" }, "‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏"),

    email,
    pass,

    h("div", { class:"row-between" }, [ showPwBox, forgot ]),

    btnLogin,
    msg,

    h("div", { class:"footer" }, [
      "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ? ",
      (() => {
        const a = h("a", { href:"#", class:"link" }, "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å");
        a.onclick = (e)=>{ e.preventDefault(); goto("register"); };
        return a;
      })()
    ]),
  ]);

  const page = h("div", { class:"page" }, card);
  root.appendChild(page);

  if (showSuccessOnLogin){
    msg.style.color = "green";
    msg.textContent = "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‚Äî ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ";
    showSuccessOnLogin = false;
  } else {
    msg.textContent = "";
  }

  [email, pass].forEach(el => el.addEventListener("keydown", e=>{
    if (e.key === "Enter") btnLogin.click();
  }));
}

function renderRegister(root){
  const msg = h("div", { id:"msg" });

  const name  = h("input", { class:"input", type:"text",  placeholder:"‡∏ä‡∏∑‡πà‡∏≠ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)" });
  const email = h("input", { class:"input", type:"email", placeholder:"Email" });

  // ‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° üëÅ
  const pw1 = makePwField("Password (‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß)");
  const pw2 = makePwField("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô");
  const pass  = pw1.input;
  const pass2 = pw2.input;

  const btnRegister = h("button", { class:"btn btn-primary" }, "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å");
  btnRegister.onclick = async ()=>{
    msg.style.color = "#c62828"; msg.textContent = "";

    const emailVal = email.value.trim();
    const passVal  = pass.value;
    const pass2Val = pass2.value;

    if (!emailVal) return msg.textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•";
    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(emailVal)) return msg.textContent = "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
    if (!passVal || passVal.length < 6) return msg.textContent = "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß";
    if (passVal !== pass2Val) return msg.textContent = "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô";

    const old = btnRegister.textContent;
    btnRegister.disabled = true; btnRegister.textContent = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£...";
    try{
      await api("/register", { method:"POST", body:{ name: name.value.trim() || null, email: emailVal, password: passVal } });
      lastRegisteredEmail = emailVal;
      showSuccessOnLogin = true;
      goto("login");
    }catch(e){
      msg.textContent = e.message || "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
    }finally{
      btnRegister.disabled = false; btnRegister.textContent = old;
    }
  };

  const backToLogin = h("a", { href:"#", class:"link" }, "‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
  backToLogin.onclick = (e)=>{ e.preventDefault(); goto("login"); };

  const card = h("div", { class:"login-card" }, [
    h("div", { class:"brand" }, [
      h("img", { src:"./images/logo.png", alt:"Elder Care", onerror:"this.style.display='none'" }),
    ]),
    h("h1", { class:"title" }, "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"),
    h("p", { class:"subtitle" }, "‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"),

    name, email, 
    pw1.wrap, pw2.wrap,

    btnRegister,
    msg,

    h("div", { class:"footer" }, [ backToLogin ]),
  ]);

  const page = h("div", { class:"page" }, card);
  root.appendChild(page);

  [name,email,pass,pass2].forEach(el => el.addEventListener("keydown", e=>{
    if (e.key === "Enter") btnRegister.click();
  }));
}

// ====== ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home ======
async function doLogin({ email, password }, msgEl, btn) {
  msgEl.style.color = "crimson";
  msgEl.textContent = "";
  if (!email) return msgEl.textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•";
  if (!password) return msgEl.textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô";

  const oldText = btn.textContent;
  btn.disabled = true; btn.textContent = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...";
  try {
    const data = await api("/login", { method: "POST", body: { email, password } });
    setToken(data.token);
    window.location.href = "./home.html";
    return;
  } catch (e) {
    msgEl.textContent = e.message || "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
  } finally {
    btn.disabled = false; btn.textContent = oldText;
  }
}

/* ----------------- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ -----------------
   ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å render() ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤ login/register ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
--------------------------------------------------- */
window.addEventListener("DOMContentLoaded", () => {
  const page = location.pathname.split("/").pop().toLowerCase();
  const isAuthPage = page === "login.html" || page === "register.html" || page === "";
  if (isAuthPage) render();
});

// ---------------------------------------------------------
// ========== ‡∏™‡πà‡∏ß‡∏ô Feature ‡∏ó‡∏±‡πâ‡∏á 4 ==========
// ---------------------------------------------------------

// utils ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ features
function fmtDateTimeLocal(dtStr){
  const d = dtStr ? new Date(dtStr) : new Date();
  const pad = n => String(n).padStart(2, "0");
  return `${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}T${pad(d.getHours())}:${pad(d.getMinutes())}`;
}
// ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ el() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ä‡∏ô‡∏Å‡∏±‡∏ö h()
function el(tag, attrs={}, children=[]){
  const e = document.createElement(tag);
  for (const [k,v] of Object.entries(attrs)) (k==="class") ? e.className=v : e.setAttribute(k,v);
  if (!Array.isArray(children)) children=[children];
  children.forEach(c=>e.append(c instanceof Node ? c : document.createTextNode(c)));
  return e;
}
function load(key, def){ try{ return JSON.parse(localStorage.getItem(key)) ?? def; }catch{ return def; } }
function save(key, val){ localStorage.setItem(key, JSON.stringify(val)); }

// ====== 1) ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ======
function scheduleInit(){
  requireAuth();
  const listKey = "ec_schedule";
  const form  = document.getElementById("schedule-form");
  const tbody = document.getElementById("schedule-tbody");
  const items = load(listKey, []);

  function renderRows(){
    tbody.innerHTML = "";
    if(!items.length){
      tbody.append(el("tr",{}, el("td",{colspan:5,class:"empty"},"‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢")));
      return;
    }
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
    items.sort((a,b)=> new Date(a.when) - new Date(b.when));

    items.forEach((it,idx)=>{
      const tr = el("tr",{},[
        el("td",{}, it.title),
        el("td",{}, new Date(it.when).toLocaleString()),
        el("td",{}, it.place || "-"),
        el("td",{}, it.note || "-"),
        el("td",{}, [
          el("button",{type:"button",class:"btn btn-secondary", "data-act":"edit", "data-i":idx}, "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"),
          " ",
          el("button",{type:"button",class:"btn btn-danger",   "data-act":"del",  "data-i":idx}, "‡∏•‡∏ö")
        ])
      ]);
      tbody.append(tr);
    });
  }

  // ‡πÉ‡∏ä‡πâ event delegation ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠
  tbody.addEventListener("click", (e)=>{
    const btn = e.target.closest("button[data-act]");
    if(!btn) return;
    const i = Number(btn.dataset.i);
    if(btn.dataset.act === "del"){
      items.splice(i,1);
      save(listKey, items);
      renderRows();
    }else if(btn.dataset.act === "edit"){
      const it = items[i];
      form.title.value = it.title || "";
      form.when.value  = fmtDateTimeLocal(it.when);
      form.place.value = it.place || "";
      form.note.value  = it.note  || "";
      form.index.value = i;
      form.title.focus();
    }
  });

  form.addEventListener("submit", (e)=>{
    e.preventDefault();
    const it = {
      title: form.title.value.trim(),
      when:  new Date(form.when.value).toISOString(),
      place: form.place.value.trim(),
      note:  form.note.value.trim(),
    };
    if(!it.title) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠");
    const idx = form.index.value;
    if(idx === "") items.push(it); else items[idx]=it;
    save(listKey, items);
    form.reset(); form.when.value = fmtDateTimeLocal(); form.index.value="";
    renderRows();
  });

  form.when.value = fmtDateTimeLocal();
  renderRows();
}

// ====== 2) ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏¢‡∏≤ ======
function medsInit(){
  requireAuth();
  const key   = "ec_meds";
  const form  = document.getElementById("meds-form");
  const tbody = document.getElementById("meds-tbody");
  const items = load(key, []);

  function renderRows(){
    tbody.innerHTML = "";
    if(!items.length){
      tbody.append(el("tr",{}, el("td",{colspan:6,class:"empty"},"‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏¢‡∏≤")));
      return;
    }
    items.forEach((it,idx)=>{
      const tr = el("tr",{},[
        el("td",{}, it.name),
        el("td",{}, `${it.dose} ${it.unit}`.trim()),
        el("td",{}, it.freq),
        el("td",{}, (it.times && it.times.length) ? it.times.join(", ") : "-"),
        el("td",{}, it.note || "-"),
        el("td",{}, [
          el("button",{type:"button",class:"btn btn-secondary","data-act":"edit","data-i":idx},"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"),
          " ",
          el("button",{type:"button",class:"btn btn-danger","data-act":"del","data-i":idx},"‡∏•‡∏ö")
        ])
      ]);
      tbody.append(tr);
    });
  }

  tbody.addEventListener("click",(e)=>{
    const btn = e.target.closest("button[data-act]");
    if(!btn) return;
    const i = Number(btn.dataset.i);
    if(btn.dataset.act === "del"){
      items.splice(i,1); save(key, items); renderRows();
    }else if(btn.dataset.act === "edit"){
      const it = items[i];
      form.name.value  = it.name || "";
      form.dose.value  = it.dose || "";
      form.unit.value  = it.unit || "‡πÄ‡∏°‡πá‡∏î";
      form.freq.value  = it.freq || "‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á";
      form.times.value = (it.times||[]).join(",");
      form.note.value  = it.note || "";
      form.index.value = i;
      form.name.focus();
    }
  });

  form.addEventListener("submit",(e)=>{
    e.preventDefault();
    const it = {
      name: form.name.value.trim(),
      dose: form.dose.value,
      unit: form.unit.value,
      freq: form.freq.value,
      times: form.times.value.split(",").map(s=>s.trim()).filter(Boolean),
      note: form.note.value.trim(),
    };
    if(!it.name) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤");
    const idx = form.index.value;
    if(idx==="") items.push(it); else items[idx]=it;
    save(key, items); form.reset(); form.index.value=""; renderRows();
  });

  renderRows();
}

// ====== 3) ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ======
function healthInit(){
  requireAuth();
  const key   = "ec_health";
  const form  = document.getElementById("health-form");
  const tbody = document.getElementById("health-tbody");
  const items = load(key, []);

  function renderRows(){
    tbody.innerHTML = "";
    if(!items.length){
      tbody.append(el("tr",{}, el("td",{colspan:7,class:"empty"},"‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")));
      return;
    }
    items.sort((a,b)=> new Date(b.dt) - new Date(a.dt));
    items.forEach((it,idx)=>{
      const tr = el("tr",{},[
        el("td",{}, new Date(it.dt).toLocaleString()),
        el("td",{}, it.bp || "-"),
        el("td",{}, it.hr || "-"),
        el("td",{}, it.weight || "-"),
        el("td",{}, it.temp || "-"),
        el("td",{}, it.mood || "-"),
        el("td",{}, [
          el("button",{type:"button",class:"btn btn-danger","data-act":"del","data-i":idx},"‡∏•‡∏ö")
        ])
      ]);
      tbody.append(tr);
    });
  }

  tbody.addEventListener("click",(e)=>{
    const btn = e.target.closest("button[data-act='del']");
    if(!btn) return;
    const i = Number(btn.dataset.i);
    items.splice(i,1); save(key, items); renderRows();
  });

  form.addEventListener("submit",(e)=>{
    e.preventDefault();
    const it = {
      dt: new Date(form.dt.value || new Date()).toISOString(),
      bp: form.bp.value.trim(),
      hr: form.hr.value.trim(),
      weight: form.weight.value.trim(),
      temp: form.temp.value.trim(),
      mood: form.mood.value,
      note: form.note.value.trim(),
    };
    items.push(it); save(key, items); form.reset(); form.dt.value = fmtDateTimeLocal(); renderRows();
  });

  form.dt.value = fmtDateTimeLocal();
  renderRows();
}


// ====== 4) ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡∏°‡πà) ======
function alertsInit(){
  requireAuth();
  const key   = "ec_alerts";
  const form  = document.getElementById("alerts-form");
  const tbody = document.getElementById("alerts-tbody");
  const items = load(key, []);

  function renderRows(){
    tbody.innerHTML = "";
    if (!items.length){
      tbody.append(el("tr",{}, el("td",{colspan:5,class:"empty"},"‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô")));
      return;
    }
    items.sort((a,b)=> new Date(a.when) - new Date(b.when));
    items.forEach((it,idx)=>{
      const tr = el("tr",{},[
        el("td",{}, it.type),
        el("td",{}, it.title),
        el("td",{}, new Date(it.when).toLocaleString()),
        el("td",{}, it.note || "-"),
        el("td",{}, [
          el("button",{type:"button",class:"btn btn-secondary","data-act":"edit","data-i":idx},"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"),
          " ",
          el("button",{type:"button",class:"btn btn-danger","data-act":"del","data-i":idx},"‡∏•‡∏ö")
        ])
      ]);
      tbody.append(tr);
    });
  }

  // ‡πÉ‡∏ä‡πâ event delegation ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á re-render ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  tbody.addEventListener("click",(e)=>{
    const btn = e.target.closest("button[data-act]");
    if(!btn) return;
    const i = Number(btn.dataset.i);
    if (btn.dataset.act === "del"){
      items.splice(i,1);
      save(key, items);
      renderRows();
    } else if (btn.dataset.act === "edit"){
      const it = items[i];
      form.type.value  = it.type;
      form.title.value = it.title;
      form.when.value  = fmtDateTimeLocal(it.when);
      form.note.value  = it.note || "";
      // ‡πÄ‡∏Å‡πá‡∏ö index ‡πÑ‡∏ß‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
      if (!form.index){
        const h = document.createElement("input");
        h.type = "hidden"; h.name = "index";
        form.appendChild(h);
      }
      form.index.value = i;
      form.title.focus();
    }
  });

  form.addEventListener("submit",(e)=>{
    e.preventDefault();
    const it = {
      type:  form.type.value,
      title: form.title.value.trim(),
      when:  new Date(form.when.value).toISOString(),
      note:  form.note.value.trim(),
    };
    if (!it.title) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠");

    const idx = form.index && form.index.value !== "" ? Number(form.index.value) : -1;
    if (idx >= 0) items[idx] = it; else items.push(it);

    save(key, items);
    form.reset();
    form.when.value = fmtDateTimeLocal();  // ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà
    if (form.index) form.index.value = "";
    renderRows();
  });

  // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞ render ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  form.when.value = fmtDateTimeLocal();
  renderRows();

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏õ‡∏¥‡∏î Notifications ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
  const tip = document.getElementById("notif-tip");
  if ("Notification" in window){
    tip.innerHTML = (Notification.permission === "granted")
      ? "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚úÖ"
      : `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï ‚ùå 
         <a class="link" href="#" id="askPerm">‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥</a>`;
    const ask = document.getElementById("askPerm");
    if (ask) ask.onclick = async (ev)=>{
      ev.preventDefault();
      const p = await Notification.requestPermission();
      alert("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥: " + p);
      // refresh ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      alertsInit();
    };
  } else {
    tip && (tip.textContent = "‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Web Notifications");
  }
}

/* ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å <script> ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ HTML ‡πÑ‡∏î‡πâ */
window.scheduleInit = scheduleInit;
window.medsInit     = medsInit;
window.healthInit   = healthInit;
window.alertsInit   = alertsInit;